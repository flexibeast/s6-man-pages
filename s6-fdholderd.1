.Dd August 26, 2020
.Dt S6-FDHOLDERD 1
.Os
.Sh NAME
.Nm s6-fdholderd
.Nd serving part of the
.Xr s6-fdholder-daemon 1
fd-holding server.
.Sh SYNOPSIS
.Nm
.Op Fl 1
.Op Fl v Ar verbosity
.Op Fl c Ar maxconn
.Op Fl n Ar maxfds
.Op Fl t Ar clienttimeout
.Op Fl T Ar lameducktimeout
.Op Fl i Ar rulesdir | Fl x Ar rulesfile
.Sh DESCRIPTION
.Nm
assumes that its stdin is a bound and listening Unix domain socket; it
accepts connections from clients connecting to that socket, and stores
and retrieves file descriptors on their behalf.
.Pp
.Nm
accepts connections from clients to an already bound and listening
.Dv SOCK_STREAM
Unix domain socket which is its standard input.
.Pp
Depending on the verbosity level, it logs what it does to stderr.
.Pp
It runs until killed by a signal (normally SIGTERM). When
.Nm
is killed, all the fds it is currently holding are lost; if they need
to be preserved, the admin should make sure to transfer them
beforehand.
.Pp
Client connections are short-lived. Clients generally perform one
operation, then disconnect.
.Pp
Possible operations include:
.Bl -bullet -width x
.It
Storing a file descriptor:
.Xr s6-fdholder-store 1 .
.It
Retrieving a file descriptor:
.Xr s6-fdholder-retrieve 1 .
.It
Deleting a file descriptor:
.Xr s6-fdholder-delete 1 .
.It
Listing stored file descriptor identifiers:
.Xr s6-fdholder-list 1 .
.It
Getting the whole server state:
.Xr s6-fdholder-getdump 1 .
.It
Setting the whole server state, or more accurately adding a set of
file descriptors to the already existing state:
.Xr s6-fdholder-setdump 1 .
.El
.Pp
.Nm
is meant to be execve'd into by a program that gets the listening
socket. That program is normally
.Xr s6-ipcserver-socketbinder 1 ,
which creates the socket itself; but it can be a different one if the
socket is to be obtained by another means, for instance if it has been
retrieved from another fd-holding daemon.
.Pp
.Nm
will store any open file descriptor, without discriminating on its
type. However, it makes more sense to store certain file descriptor
types than others: for instance, Unix domain or INET domain sockets,
or named pipes, are good candidates for fd-holding. On the other hand,
it makes little sense to fd-hold regular files, and if done anyway,
the results can be surprising, because the read/write file offset is
stored with the descriptor, and no automatic rewind is performed by
the daemon.
.Pp
Despite there being access control for listing, the security of the
system should not depend on a client not knowing what identifier a
certain descriptor is stored under. If you need to hold descriptors
that only a few programs are supposed to access, you can always run a
separate
.Nm
instance in a private directory with a configuration tailored to your
needs - and you can even make the name of the listening socket
private.
.Nm
is lightweight; you can start as many instances as you need, and you
can run them as long as you need, then kill them with SIGTERM.
.Pp
.Nm
pre-allocates its storage at start, in the stack. It uses a small
amount of heap memory for communication with a client, but frees it as
soon as the client disconnects. It should never run out of memory in
normal usage, even if used intensively.
.Ss Signals
.Bl -tag -width x
.It SIGTERM
Enter lameduck mode, then exit when no more operation is pending.
.It SIGHUP
Reopen
.Ar rulesfile ,
if
.Nm
has been run with the
.F x
option. It is not necessary to send
.Nm
a SIGHUP when the
.Fl i
option is used instead: configuration changes in the filesystem are
automatically picked up.
.El
.Ss Identifiers
Every file descriptor is stored in the
.Nm
daemon via the
.Xr s6-fdholder-store 1
program, with an identifier. That identifier is a zero-terminated
character string, containing 1 to 255 characters.
.Pp
Any non-null character can be used in an identifier. Non-printable or
special characters will be quoted when printed by
.Xr s6-fdholder-list 1 .
However, it is recommended to only use reasonable characters in
identifiers: clients should be able to know at a glance what file
descriptor is represented by an identifier. Identifiers have no
special meaning to the server.
.Pp
A good convention is to use
.Ql unix: Ns Em path Ns / Ns Em to Ns / Ns Em socket
for Unix domain sockets and
.Ql Em protocol Ns : Ns Em ip Ns : Ns Em port
for INET domain sockets.
.Pp
An identifier is chosen by the storing client, within the limits of
what the server authorizes it to use.
.Pp
The retrieving client must know the exact identifier corresponding to
a descriptor to be able to retrieve that descriptor. It must also be
authorized by the server.
.Pp
When an identifier is in use, it cannot be used again to store another
descriptor. However, once the descriptor has been deleted or has
expired, it is possible to reuse the same identifier.
.Ss Configuration
Before running
.Nm
.Po
or its wrapper
.Xr s6-fdholder-daemon 1
.Pc ,
it is necessary to configure it. This is done by a series of rules, or
.Em ruleset ,
stored in either a
.Em rulesfile
in the CDB format, or in a
.Em rulesdir ,
i.e. a directory in the filesystem following a certain format.
.Nm
will refuse to run if neither the
.Fl i
nor the
.Fl x
option has been provided.
.Pp
Rulesets can be converted between the
.Em rulesdir
and
.Em rulesfile
formats with the
.Xr s6-accessrules-cdb-from-fs 1
and
.Xr s6-accessrules-fs-from-cdb 1
conversion tools.
.Ss Rules format
The rules file, or rules directory, follows the
.Xr s6-accessrules 7
format for uid and gid checking. For every connecting client,
.Nm s6-fdholderd
matches the uid and gid of the client against the provided ruleset,
and determines what the client is authorized to do.
.Pp
By default, no client is allowed to do anything - not even connect to
the server. Even
.Ql root ,
the super-user, will be denied access. That is why it is essential to
create a sensible ruleset prior to running the server in order to do
anything useful.
.Pp
The various rights that a client can have are the following (using a
rulesdir as an example, but a rulesfile works the same way):
.Bl -bullet -width x
.It
Connect to the server. This is a prerequisite for doing anything. It
will allow a client to perform
.Dq public
operations, ones that do not require specific access rights other than
connecting. (There are no such operations for now, but it could change
in the future; for now, when you allow a client to connect to the
server, make sure to give him other rights too.) This right is given
if an
.Pa allow
file is found in one of the subdirectories checked by
.Fn s6_accessrules_keycheck_uidgid .
For instance, to allow everyone to connect, touch
.Pa rulesdir/uid/default/allow .
.El
.Pp
The other rights are defined in the
.Dq environment
part of the ruleset:
.Bl -bullet -width x
.It
File descriptor storage rights. This will be checked for storage and
deletion of individual file descriptors. This right is given if a
non-empty file named
.Pa S6_FDHOLDER_STORE_REGEX
is found is the
.Pa env/
subdirectory of one of the subdirectories checked by
.Fn s6_accessrules_keycheck_uidgid .
This file should contain a single line, which will be interpreted as
an extended regular expression by
.Nm ;
the regular expression describes the set of identifiers that the
client is allowed to use to store file descriptors. For instance,
.Ql ^unix:/tmp/
indicates that a client that matches this rule will be allowed to
store or delete file descriptors using any identifier starting with
.Ql unix:/tmp/ .
.It
File descriptor retrieval rights. This will be checked for retrieval
of individual file descriptors. This right is given if a non-empty
file named
.Pa S6_FDHOLDER_RETRIEVE_REGEX
is found is the
.Pa env/
subdirectory of one of the subdirectories checked by
.Fn s6_accessrules_keycheck_uidgid .
This file should contain a single line, which will be interpreted as
an extended regular expression by
.Nm ;
the regular expression describes the set of identifiers that the
client is allowed to use to retrieve file descriptors. For instance,
.Ql ^unix:/tmp/
indicates that a client that matches this rule will be allowed to
retrieve file descriptors that are identified by strings starting with
.Ql unix:/tmp/ .
.It
Listing rights. This will be checked for clients wanting to list the
identifiers of the descriptors currently stored in the server. This
right is given if a non-empty file named
.Pa S6_FDHOLDER_LIST
is found in the
.Pa env/
subdirectory of one of the subdirectories checked by
.Fn s6_accessrules_keycheck_uidgid .
.It
Dump reading rights. This will be checked for clients wanting to copy
the whole state of the server. This right is given if a non-empty file
named
.Pa S6_FDHOLDER_GETDUMP
is found is the
.Pa env/
subdirectory of one of the subdirectories checked by
.Fn s6_accessrules_keycheck_uidgid .
This is very powerful: you should only give this right to
.Ql root ,
or to a dedicated uid that is only used to perform dump transfers.
.It
Dump writing rights. This will be checked for clients wanting to copy
an entire set of file descriptors into the server. This right is given
if a non-empty file named
.Pa S6_FDHOLDER_SETDUMP
is found is the
.Pa env/
subdirectory of one of the subdirectories checked by
.Fn s6_accessrules_keycheck_uidgid .
This is very powerful: you should only give this right to
.Ql root ,
or to a dedicated uid that is only used to perform dump transfers.
.El
.Sh OPTIONS
.Bl -tag -width x
.It Fl 1
Write a newline to stdout, and close stdout, right before entering the
client-accepting loop. If stdout is suitably redirected, this can be
used by monitoring programs to check when the server is accepting
connections. See
.Xr s6-notifywhenup 7
for more information on readiness notification.
.It Fl v Ar verbosity
Be more or less verbose.
.Ar verbosity
can be 0 (quiet), 1 (normal), or 2 or more (verbose).
.It Fl c Ar maxconn
Accept at most
.Ar maxconn
concurrent connections. Default is 16. It is impossible to set it
higher than the value of the
.Dv S6_FDHOLDER_MAX
macro, i.e. 256. Client connections to this server are short-lived, so
this number needs not be too high. Every client connection eats up one
available file descriptor, so it is best for
.Ar maxconn
to be as small as possible.
.It Fl n Ar maxfds
Store at most
.Ar maxfds
file descriptors. Default is 1000. It is impossible to set it higher
than the number of files that can be opened by the
.Nm
process, minus a few descriptors needed for correct operation. Before
running
.Nm ,
make sure to use
.Xr s6-softlimit 1
to properly adjust the number of openable files of the current
process.
.It Fl t Ar clienttimeout
Disconnect a client if it's in the middle of an operation and it has
not written or read any data in
.Ar clienttimeout
milliseconds. By default,
.Ar clienttimeout
is 0, which means infinite.
.It Fl t Ar lameducktimeout
Give clients
.Ar lameducktimeout
milliseconds to finish their current operation before exiting after
receiving a SIGTERM. By default,
.Ar lameducktimeout
is 0, which means infinite.
.It Fl x Ar rulesfile
Read access rights configuration from CDB file
.Ar rulesfile .
.It Fl i Ar rulesdir
Read access rights configuration from the filesystem in directory
.Ar rulesdir .
.El
.Sh EXAMPLES
Assuming you want to run an
.Nm
daemon in the
.Pa /service/fdholder
directory with the
.Fl i Ar rules
option, you should:
.Bl -bullet -width x
.It
Prepare the rules directory:
.Bd -literal -offset indent
mkdir /service/fdholder/rules
cd /service/fdholder/rules
mkdir uid gid
.Ed
.It
Allow a few users, or everyone, to connect. To allow root to connect:
.Bd -literal -offset indent
mkdir uid/0
touch uid/0/allow
.Ed
.Pp
To allow everyone to connect:
.Bd -literal -offset indent
mkdir uid/default
touch uid/default/allow
.Ed
.El
.Pp
Depending on your policy, you should now give certain rights to
certain users or groups. For instance:
.Bl -bullet -width x
.It
To allow user number 50 to perform dump transfers from and to this
server:
.Bd -literal -offset indent
mkdir -p uid/50/env
touch uid/50/allow
echo > uid/50/env/S6_FDHOLDER_GETDUMP
echo > uid/50/env/S6_FDHOLDER_SETDUMP
.Ed
.It
To allow user number 72 to store a descriptor under the name
.Ql foobar
and
.Em only
this name:
.Bd -literal -offset width x
mkdir -p uid/72/env
touch uid/72/allow
echo '^foobar$' > uid/72/env/S6_FDHOLDER_STORE_REGEX
.Ed
.It
To allow users having 23 as their primary group number to retrieve
file descriptors with an identifier containing
.Ql foo ,
then one character, then
.Ql bar :
.Bd -literal -offset indent
mkdir -p gid/23/env
touch gid/23/allow
echo foo.bar > gid/23/env/S6_FDHOLDER_RETRIEVE_REGEX
.Ed
.It
To allow the same users to list all identifiers:
.Bd -literal -offset indent
echo > gid/23/env/S6_FDHOLDER_LIST
.Ed
.It
To allow everyone to dump entire states into the server
.Po
.Sy never do this !
it's only an example
.Pc :
.Bd -literal -offset indent
mkdir -p uid/default/env
touch uid/default/allow
echo > uid/default/env/S6_FDHOLDER_SETDUMP
.Ed
.El
.Sh SEE ALSO
.Xr s6-fdholder-daemon 1 ,
.Xr s6-fdholder-store 1 ,
.Xr s6-fdholder-retrieve 1 ,
.Xr s6-fdholder-delete 1 ,
.Xr s6-fdholder-list 1 ,
.Xr s6-fdholder-getdump 1 ,
.Xr s6-fdholder-setdump 1 ,
.Xr s6-fdholder-transferdump 1
.Pp
This man page is ported from the authoritative documentation at
.Lk http://skarnet.org/software/s6/ .
.Sh AUTHORS
.An Laurent Bercot
