.Dd September 10, 2020
.Dt S6-SVC 1
.Os
.Sh NAME
.Nm s6-svc
.Nd send commands to a running
.Xr s6-supervise 1
process
.Sh SYNOPSIS
.Nm
.Op Fl wu | wU | wd | wD | wr | wR
.Op Fl T Ar timeout
.Op Fl abqhkti12pcyoduxOr
.Ar servicedir
.Sh DESCRIPTION
.Nm
is used to control a supervised process; among other benefits, it
allows an administrator to send signals to daemons without knowing
their PIDs, and without using horrible hacks such as .pid files.
.Pp
.Nm
sends the given series of commands to the
.Xr s6-supervise 1
process monitoring the
.Ar servicedir
directory, then exits 0.
It exits 111 if it cannot send a command, or
100 if no
.Xr s6-supervise 1
process is running on
.Ar servicedir .
.Sh OPTIONS
.Bl -tag -width x
.It Fl a
Send a SIGALRM to the supervised process.
.It Fl b
Send a SIGABRT to the supervised process.
.It Fl q
Send a SIGQUIT to the supervised process.
.It Fl h
Send a SIGHUP to the supervised process.
.It Fl k
Send a SIGKILL to the supervised process.
.It Fl t
Send a SIGTERM to the supervised process.
.It Fl i
Send a SIGINT to the supervised process.
.It Fl 1
Send a SIGUSR1 to the supervised process.
.It Fl 2
Send a SIGUSR2 to the supervised process.
.It Fl p
Send a SIGSTOP to the supervised process.
.It Fl c
Send a SIGCONT to the supervised process.
.It Fl y
Send a SIGWINCH to the supervised process.
.It Fl o
Once.
Equivalent to
.Ql -uO .
.It Fl d
Down.
If the supervised process is up, send it a SIGTERM (by default) then a
SIGCONT (to make sure even stopped processes receive the signal aimed
to kill them) and do not restart it.
The SIGTERM default can be changed by editing the
.Pa ./down-signal
file in the service directory.
.It Fl u
Up.
If the supervised process is down, start it.
Automatically restart it when it dies.
.It Fl x
Exit.
When the service is asked to be down and the supervised process dies,
.Xr s6-supervise 1
will exit too.
This command should normally never be used on a working system.
.It Fl X
Close fds and exit.
Like
.Fl x ,
but
.Xr s6-supervise 1
will immediately close its stdin, stdout and stderr.
This is useful when
.Xr s6-supervise 1
has descriptors open to the service it is supervising and the service
is waiting for them to close before exiting.
Note that if this option is used, the last execution of the service's
finish script will be run with stdin, stdout and stderr redirected to
.Pa /dev/null .
.It Fl O
Mark the service to run once at most.
iow: do not restart the supervised process when it dies.
If it is down when the command is received, do not even start it.
.It Fl r
If the service is up, restart it, by sending it a signal to kill it
and letting s6-supervise start it again.
By default, the signal is a SIGTERM; this can be configured via the
.Pa ./down-signal
file in the service directory.
.It Fl T Ar timeout
If the
.Fl wstate
option has been given,
.Fl T
specifies a timeout (in milliseconds) after which
.Nm
will exit 1 with an error message if the service still hasn't reached
the desired state.
By default, the timeout is 0, which means that
.Nm
will block indefinitely.
.It Fl wd
.Nm
will not exit until the service is down, i.e. until the
.Pa run
process has died.
.It Fl wD
.Nm
will not exit until the service is down and ready to be brought up,
i.e. a possible
.Pa finish
script has exited.
.It Fl wu
.Nm
will not exit until the service is up, i.e. there is a process running the
.Pa run
executable.
.It Fl wU
.Nm
will not exit until the service is up and ready as notified by the
daemon itself.
If the service directory does not contain a
.Pa notification-fd
file to tell
.Xr s6-supervise 1
to accept readiness notification,
.Nm
will print a warning and act as if the
.Fl wu
option had been given instead.
.It Fl wr
.Nm
will not exit until the service has been started or restarted.
.It Fl wR
.Nm
will not exit until the service has been started or restarted and has
notified readiness.
.El
.Sh IMPLEMENTATION NOTES
.Nm
writes control commands into the
.Pa servicedir/supervise/control
FIFO.
A
.Xr s6-supervise 1
process running on
.Pa servicedir
will be listening to this FIFO, and will read and interpret those
commands.
.Pp
When invoked with one of the
.Fl w
options,
.Nm
executes into
.Xr s6-svlisten1 1 ,
which will listen to service state changes and spawn another
.Nm
instance (without the
.Fl w
option) that will send the commands to the service.
Any error message written during the waiting period will mention it is
being written by
.Xr s6-svlisten1 1 ;
this is normal.
.Sh EXAMPLES
.Dl s6-svc -h /service/httpd
.Pp
Send a SIGHUP to the process represented by the
.Pa /service/httpd
service directory.
Traditionally, this makes web servers reload their configuration file.
.Pp
.Dl s6-svc -r /service/sshd
.Pp
Kill (and automatically restart, if the wanted state of the service is
up) the process represented by the
.Pa /service/sshd
service directory - typically the sshd server.
.Pp
.Dl s6-svc -wD -d /service/ftpd
.Pp
Take down the ftpd server and block until the process is down and the
finish script has completed.
.Pp
.Dl s6-svc -wU -T 5000 -u /service/ftpd
.Pp
Bring up the ftpd server and block until it has sent notification that
it is ready.
Exit 1 if it is still not ready after 5 seconds.
.Pp
.Dl s6-svc -wR -t /service/ftpd
.Pp
Send a SIGTERM to the ftpd server; wait for
.Xr s6-supervise 1
to restart it, and block until it has notified that it is ready to
serve again.
.Pp
.Dl s6-svc -a /service/httpd/log
.Pp
Send a SIGALRM to the logger process for the httpd server.
If this logger process is
.Xr s6-log 1 ,
this triggers a log rotation.
.Sh SEE ALSO
.Xr s6-notifyoncheck 1 ,
.Xr s6-permafailon 1 ,
.Xr s6-supervise 1 ,
.Xr s6-svdt 1 ,
.Xr s6-svdt-clear 1 ,
.Xr s6-svlisten 1 ,
.Xr s6-svlisten1 1 ,
.Xr s6-svok 1 ,
.Xr s6-svscan 1 ,
.Xr s6-svscanctl 1 ,
.Xr s6-svstat 1 ,
.Xr s6-svwait 1 ,
.Pp
This man page is ported from the authoritative documentation at:
.Lk https://skarnet.org/software/s6/s6-svc.html
.Sh AUTHORS
.An Laurent Bercot
.An Alexis Ao Mt flexibeast@gmail.com Ac (man page port)
