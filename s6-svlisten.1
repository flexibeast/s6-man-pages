.Dd August 30, 2020
.Dt S6-SVLISTEN 1
.Os
.Sh NAME
.Nm s6-svlisten
.Nd run a program while listening on notifications from a collection of supervised services, and block until they all go up, or down.
.Sh SYNOPSIS
.Bl -bullet -width x
.It
In an execline script:
.Pp
.Nm
.Op Fl U | u | D | d | r | R
.Op Fl a | o
.Op Fl t Ar timeout
.Bro
.Ar servicedir servicedir...
.Brc
.Ar prog...
.It
Outside of an execline script:
.Pp
.Nm
.Op Fl U | u | D | d | r | R
.Op Fl a | o
.Op Fl t Ar timeout
.Ar servicedir servicedir...
""
.Ar prog...
.El
.Sh DESCRIPTION
.Nm
only waits for notifications; it never polls.
.Pp
.Nm
checks the state of one or more service directories given as arguments
in the first block and monitor their state changes.
.Pp
It spawns
.Ar prog...
as a child right after getting the initial state of all the monitored
services.
.Pp
It then blocks until the wanted state happens.
.Pp
.Nm
is the service-specific version of
.Xr s6-ftrig-listen 1 .
The point of
.Nm s6-svlisten
is to use it to spawn a program such as
.Xr s6-svc 1 ,
in order to send signals to services while making sure to catch their
state changes - thus avoiding the race condition that occurs when
running
.Xr s6-svc 1
then
.Xr s6-svwait 1
sequentially.
.Pp
.Nm
needs to handle a variable length list of service directories. For
that, it uses an encoding provided by execline, so it's best to only
use it in execline scripts (only the execline syntax is guaranteed not
to change). There is a variant of
.Nm
that does not use execline syntax, but only handles one service
directory:
.Xr s6-svlisten1 1 .
.Pp
The
.Fl R
or
.Fl r
options imply the
.Fl a
option. It is not possible to wait for one of the listed services to
restart.
.Sh OPTIONS
.Bl -tag -width x
.It Fl u
Up.
.Nm
will wait until the services are up, as reported by
.Xr s6-supervise 1 .
This is the default; it is not reliable, but it does not depend on
specific support in the service programs. See
.Xr s6-notifywhenup 7
for details.
.It Fl U
Really up.
.Nm
will wait until the services are up and ready as reported by the
services themselves. This requires specific support in the service
programs, and the use of the
.Pa notification-fd
file in the service directory. See the explanation in
.Xr s6-notifywhenup 7 .
.It Fl d
Down.
.Nm
will wait until the services are down.
.It Fl D
Really down.
.Nm
will wait until the services are down and the cleanup scripts in
.Sm off
.Ar servicedir /
.Pa finish
.Sm on for every
.Ar servicedir
have finished executing (or have timed out and been killed).
.It Fl r
Restart.
.Nm
will wait until all the services have been started or restarted,
i.e. they have been in the down state, then the up state.
.It Fl R
Restart and ready.
.Nm
will wait until all the services have been started or restarted and
have notified readiness.
.It Fl o
Or.
.Nm
will wait until one of the given services comes up or down.
.It Fl a
And.
.Nm
will wait until all of the given services come up or down. This is the
default.
.It Fl t Ar timeout
If the requested events have not happened after
.Ar timeout
milliseconds,
.Nm
will print a message to stderr and exit 99. By default,
.Ar timeout
is 0, which means no time limit.
.El
.Sh EXIT STATUS
.Bl -tag -width x
.It 0
Success, the wanted state has been reached.
.It 99
Timed out.
.It 100
Wrong usage.
.It 102
The
.Xr s6-supervise 1
process monitoring the service died.
.It 111
System call failed.
.It Em n
Services were expected to come up, but
.Em n
of them reported permanent failure.
.El
.Sh SEE ALSO
.Xr s6-svscan 1 ,
.Xr s6-svscanctl 1 ,
.Xr s6-supervise 1 ,
.Xr s6-svc 1 ,
.Xr s6-svok 1 ,
.Xr s6-svstat 1 ,
.Xr s6-svwait 1 ,
.Xr s6-svlisten1 1 ,
.Xr s6-notifyoncheck 1 ,
.Xr s6-svdt 1 ,
.Xr s6-svdt-clear 1 ,
.Xr s6-permafailon 1
.Pp
This man page is ported from the authoritative documentation at
.Lk http://skarnet.org/software/s6/ .
.Sh AUTHORS
.An Laurent Bercot
